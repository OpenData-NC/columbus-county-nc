Open Rural
==========

This is a Django app that was generated by running
`paster create -t openblock openrural`.
It starts as a thin wrapper around ebpub, and like any such django app
it may be customized by adding templates, modifying urls.py, etc.

For more documentation, see
http://openblockproject.org/docs/install/custom.html

For deployment with apache's mod_wsgi, there is a suitable wsgi script
in the wsgi/ directory.

There are more example config files in etc/.

Local Development Setup
-----------------------

Clone Open Rural::

    $ git clone git://github.com/openrural/openrural-nc.git
    $ cd openrural-nc/

Create a new virtualenv and install the Open Rural packages::

    $ mkvirtualenv --distribute openrural
    $ pip install -r requirements/deploy.txt
    $ pip install --no-index --find-links=file:$PWD/requirements/sdists/ -r requirements/ebdata.txt
    $ pip install --no-index --find-links=file:$PWD/requirements/sdists/ -r requirements/ebpub.txt
    $ pip install --no-index --find-links=file:$PWD/requirements/sdists/ -r requirements/obadmin.txt
    $ pip install --no-index --find-links=file:$PWD/requirements/sdists/ -r requirements/openrural.txt
    $ add2virtualenv .

Create a PostgreSQL database for development::

    $ createdb --template=template_postgis openblock_devel

Create a local settings file::

    $ cp openrural/local_settings.py.example openrural/local_settings.py

Edit ``local_settings.py`` and extend from the project settings module you want to work on::

    1c1
    < from openrural.settings import *
    ---
    > from openrural.settings_whiteville import *

Point Django do your local settings and initialize the database::

    $ export DJANGO_SETTINGS_MODULE=openrural.local_settings
    $ django-admin.py syncdb --migrate

If everything went smoothly, you can now runserver::

    $ django-admin.py runserver
