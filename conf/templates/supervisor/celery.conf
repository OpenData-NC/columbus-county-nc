[program:celeryd]
command= {{ virtualenv_root }}/bin/django-admin.py celeryd -c 2 --loglevel=INFO -E --pidfile=/tmp/{{ project }}-{{ environment }}-celeryd.pid --settings={{ settings }}
directory={{ project_root }}
user={{ project_user }}
numprocs=1
autostart=true
autorestart=true
stdout_logfile={{ log_dir }}/celeryd.log
redirect_stderr=true
stderr_logfile={{ log_dir }}/celeryd-error.log
startsecs=10
; Need to wait for currently executing tasks to finish at shutdown.
; Increase this if you have very long running tasks.
stopwaitsecs = 600
; if rabbitmq is supervised, set its priority higher
; so it starts first
priority=998
environment=PYTHONPATH='{{ code_root }}'

[program:celerybeat]
command={{ virtualenv_root }}/bin/django-admin.py celerybeat --loglevel=INFO --pidfile=/tmp/{{ project }}-{{ environment }}-celerybeat.pid --settings={{ settings }}
directory={{ project_root }}
user={{ project_user }}
numprocs=1
autostart=true
autorestart=true
stdout_logfile={{ log_dir }}/celerybeat.log
redirect_stderr=true
stderr_logfile={{ log_dir }}/celerybeat-error.log
startsecs=10
; if rabbitmq is supervised, set its priority higher
; so it starts first
priority=999
environment=PYTHONPATH='{{ code_root }}'

[program:celerycam]
command={{ virtualenv_root }}/bin/django-admin.py celerycam --pidfile=/tmp/{{ project }}-{{ environment }}-celerycam.pid --settings={{ settings }}
directory={{ project_root }}
user={{ project_user }}
numprocs=1
autostart=true
autorestart=true
stdout_logfile={{ log_dir }}/celerycam.log
redirect_stderr=true
stderr_logfile={{ log_dir }}/celerycam-error.log
startsecs=10
; if rabbitmq is supervised, set its priority higher
; so it starts first
priority=999
environment=PYTHONPATH='{{ code_root }}'
